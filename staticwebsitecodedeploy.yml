---
Description: >
  Create a codebuild project to deploy and cloudwatch event to rebuild/deploy on commits

Parameters:
  # External stacks
  WebsiteStack:
    Type: String
    Description: Name of existing stack that deployed static S3 website
    MaxLength: 128
    AllowedPattern: "^[a-zA-Z][a-zA-Z0-9-]+$"
  
  RepoStack:
    Type: String
    Description: Name of codecommit stack to import values from
    MaxLength: 128
    AllowedPattern: "^[a-zA-Z][a-zA-Z0-9-]+$"
 
  NotificationEmails:
    Type: String
    Description: Email address to recieve build Notifications
    AllowedPattern: "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"

  CodeBuildImage:
    Type: String
    Description: Image to use for the codebuild Project
    Default: aws/codebuild/amazonlinux2-x86_64-standard:1.0

  CodeBuildBranchName:
    Type: String
    Description: Branch for codecommit repo which contains the source for this build
    Default: master

  CodeBuildProjectName:
    Type: String
    Description: Name to use for the CodeBuild Project

  BuildSpec:
    Type: String
    Description: File containing buildspec for project - typically buildspec.yml
    Default: buildspec.yml

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: External Stacks
        Parameters:
          - WebsiteStack
          - RepoStack
      - Label:
          default: CodeBuild Project Configuration
        Parameters:
          - CodeBuildProjectName
          - CodeBuildBranchName
          - CodeBuildImage
          - BuildSpec
          - NotificationEmails

# And now some resources
Resources:
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Protocol: Email
          Endpoint: !Ref NotificationEmails

  CodeBuildIamPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: !Join [ ' ', [ "Policy to allow codebuild project", !Ref CodeBuildProjectName]]
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action: 
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
          - Effect: Allow
            Resource:
              - Fn::ImportValue: !Sub "${WebsiteStack}:S3BucketArn"
              - !Join 
                - '/'
                -
                  - Fn::ImportValue: !Sub "${WebsiteStack}:S3BucketArn" 
                  - '*'
            Action:
              - s3:PutObject
              - s3:GetBucketAcl
              - s3:GetBucketLocation
          - Effect: Allow
            Resource:
              - Fn::ImportValue: !Sub "${RepoStack}:RepoArn"
            Action:
              - codecommit:GitPull
          - Effect: Allow
            Resource:
              - !Join ['', [ 'arn:aws:codebuild:', !Ref "AWS::Region", ':', !Ref "AWS::AccountId", ":project/", !Ref CodeBuildProjectName ]]
            Action:
              - codebuild:StartBuild
              - codebuild:BatchGetProjects
          - Effect: Allow
            Resource: 
              - !Ref SNSTopic
            Action:
              - SNS:Publish
    DependsOn: SNSTopic

  CodeBuildIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref CodeBuildIamPolicy
    DependsOn: CodeBuildIamPolicy

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref CodeBuildProjectName
      BadgeEnabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: !Ref BuildSpec
        Type: CODECOMMIT
        Location: 
          Fn::ImportValue: !Sub "${RepoStack}:RepoUrl"
      SourceVersion: !Join ['', ['refs/heads/', !Ref CodeBuildBranchName]]
      ServiceRole: !Ref CodeBuildIAMRole
      Artifacts:
        Type: S3
        Location: 
          Fn::ImportValue: !Sub "${WebsiteStack}:S3BucketArn"
        Name: '/'
        EncryptionDisabled: true
    DependsOn: CodeBuildIAMRole

  CodeCommitCloudWatchEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: !Join [ ' ', [ 'Call', !Ref CodeBuildProjectName, 'when change to', !Ref CodeBuildBranchName, 'branch of repo' ]]
      RoleArn: !GetAtt CodeBuildIAMRole.Arn
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        detail:
          referenceType:
            - branch
          referenceName:
            - !Ref CodeBuildBranchName
        resources:
          - Fn::ImportValue: !Sub "${RepoStack}:RepoArn"
      Targets:
        - Arn: !GetAtt CodeBuildProject.Arn
          Id: CodeBuild123
          RoleArn: !GetAtt CodeBuildIAMRole.Arn
    DependsOn: 
      - CodeBuildIAMRole
      - CodeBuildProject

  CodeBuildCloudWatchEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: !Join [ ' ', [ 'Send SNS notification with status from Codebuild run of', !Ref CodeBuildProjectName ]]
      RoleArn: !GetAtt CodeBuildIAMRole.Arn
      EventPattern:
        source:
          - aws.codebuild
        detail-type:
          - CodeBuild Build State Change
        detail:
          build-status:
            - FAILED
            - SUCCEEDED
        resources:
          - !GetAtt CodeBuildProject.Arn
      Targets:
        - Arn: !Ref SNSTopic
          Id: CodeBuildNotification
          # RoleArn: !GetAtt CodeBuildIAMRole.Arn
    DependsOn: 
      - CodeBuildIAMRole
      - CodeBuildProject
      - SNSTopic
